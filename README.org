Joyful Web

* What is this?

The Joyful website generator creates "static" websites authored in Org markup and rendered with [[http://jinja.pocoo.org/][Jinja2]] templates.  

* How does it work

Joyful Web provides a Python package with a command line interface.
You provide the content as Org and you direct its layout by providing
Jinja2 templates.  Ancillary static files (images, CSS, JS, etc) can
also be provided.  And, because it's Org, additional content may be
generated by source blocks during =org-mode= export.

** Joyful Generation 

Each =.org= file found is one "unit".  From it, various types of
things may be generated.  For example:

 - a web page
 - an entry in an RSS feed
 - a contribution to a tag cloud
 - whatever else one can dream up

The =joy= command line program can be used to process one Org file or
to aggregate information about many. 

Each Org file can generate various derived files:

- =.body= :: an HTML fragment created by Emacs =org-mode= exporting the body of Org document
- =.json= :: a JSON representation of the =org-element= of the Org file
- =.revs= :: commit revision information about the Org file if it is maintained by Git
- etc :: ... dream up others ...

** CLI

The command line interface =joy= can be used to generate your website.

#+BEGIN_SRC bash
  joy --help
  joy render -o myblogpost.html blogtemplate.html myblogpost.org
#+END_SRC

* Automation

As the website gets larger it is a good idea to automate the running
of =joy= with a build tool such as [[https://waf.io/][Waf]].  On example is used in the
joyful authors web site.  See the [[https://github.com/brettviren/org-pub/blob/master/wscript][wscript]] file.  The basic idea is to
break out the individual export, revisions and rendering in a
fine-grained way to let Waf work its magic.
